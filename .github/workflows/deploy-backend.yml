name: Deploy Backend
on:
  push:
    branches:
      - master
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install dependencies
        run: npm install
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY: ${{ secrets.EC2_SSH_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DB_SSL: ${{ secrets.DB_SSL }}
        run: |
          echo "$EC2_KEY" > key.pem
          chmod 400 key.pem
          echo "Testing SSH connection..."
          ssh -i key.pem -v -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $EC2_USER@$EC2_HOST "whoami && pwd"
          echo "Creating backend directory..."
          ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $EC2_USER@$EC2_HOST "mkdir -p ~/test/backend && chmod -R 755 ~/test/backend"
          echo "Creating env file..."
          ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $EC2_USER@$EC2_HOST "echo -e 'DATABASE_URL=$DATABASE_URL\nDB_SSL=$DB_SSL' > ~/test/backend/.env"
          echo "Deploying files..."
          rsync -avz --delete -e "ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./ $EC2_USER@$EC2_HOST:~/test/backend
          echo "Running Database migrations..."
          ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $EC2_USER@$EC2_HOST "\
          cd ~/test/backend && \
          npm install && \
          DATABASE_URL=\"$DATABASE_URL\" DB_SSL=\"$DB_SSL\" npx node-pg-migrate up\
          "
          echo "Restarting backend..."
          ssh -i key.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null $EC2_USER@$EC2_HOST "\
          cd ~/test/backend && \
          npm install && \
          DATABASE_URL=\"$DATABASE_URL\" DB_SSL=\"$DB_SSL\" pm2 restart backend || \
          DATABASE_URL=\"$DATABASE_URL\" DB_SSL=\"$DB_SSL\" pm2 start index.js --name backend\
          "
